version: '3.8'
services:
  mysql-tms:
    container_name: mysql-tms
    image: mysql
    environment:
      MYSQL_DATABASE: transactiondatabase
      MYSQL_USER: newuser
      MYSQL_PASSWORD: password
      MYSQL_ROOT_PASSWORD: admin1234
    ports:
      - "3308:3306"
    volumes:
#      - mysql_data:/var/lib/mysql  # Persist MySQL data
      - ./mysql-init:/docker-entrypoint-initdb.d/  # Custom SQL scripts directory
    networks:
      - stack
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-padmin1234"]
      interval: 30s
      timeout: 10s
      retries: 3

#  application:
#    container_name: transaction-management-service
#    build:
#      context: .
#      dockerfile: Dockerfile
#    ports:
#      - "8090:8090"
#    env_file:
#      - .env.docker
#    networks:
#      - stack
#    depends_on:
#      mysql-tms:
#        condition: service_healthy

#  zoo1:
#    image: confluentinc/cp-zookeeper:7.3.2
#    hostname: zoo1
#    container_name: zoo1
#    ports:
#      - "2181:2181"
#    environment:
#      ZOOKEEPER_CLIENT_PORT: 2181
#      ZOOKEEPER_SERVER_ID: 1
#      ZOOKEEPER_SERVERS: zoo1:2888:3888
#
#  kafka1:
#    image: confluentinc/cp-kafka:7.3.2
#    hostname: kafka1
#    container_name: kafka1
#    ports:
#      - "9092:9092"
#      - "29092:29092"
#    environment:
#      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka1:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://host.docker.internal:29092
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
#      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
#      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
#      KAFKA_BROKER_ID: 1
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
#      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
#    depends_on:
#      - zoo1

networks:
  stack:
    name: stack
    driver: bridge